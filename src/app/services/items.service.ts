import { Injectable } from '@angular/core';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { catchError } from 'rxjs/operators';

export interface Item {
  id?: number; // Optional because it's auto-generated by the database
  name: string;
  description?: string; // Add this field
}

@Injectable({
  providedIn: 'root'
})
export class ItemsService {
  private apiUrl = 'http://localhost:5121/api/Items'; // Replace with your API URL

  constructor(private http: HttpClient) {}

  // GET all items
  getItems(): Observable<Item[]> {
    return this.http.get<Item[]>(this.apiUrl).pipe(
      catchError(this.handleError)
    );
  }

  // GET item by ID
  getItemById(id: number): Observable<Item> {
    const url = `${this.apiUrl}/${id}`;
    return this.http.get<Item>(url).pipe(
      catchError(this.handleError)
    );
  }

  // POST: Create a new item
  createItem(item: Item): Observable<Item> {
    return this.http.post<Item>(this.apiUrl, item).pipe(
      catchError(this.handleError)
    );
  }

  // PUT: Update an existing item
  updateItem(id: number, item: Item): Observable<Item> {
    const url = `${this.apiUrl}/${id}`;
    return this.http.put<Item>(url, item).pipe(
      catchError(this.handleError)
    );
  }

  // DELETE: Delete an item
  deleteItem(id: number): Observable<void> {
    const url = `${this.apiUrl}/${id}`;
    return this.http.delete<void>(url).pipe(
      catchError(this.handleError)
    );
  }

  // Error handling
  private handleError(error: HttpErrorResponse) {
    console.error('An error occurred:', error);
    return throwError(() => new Error('Something went wrong; please try again later.'));
  }
}